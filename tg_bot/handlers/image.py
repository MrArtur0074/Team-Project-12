from aiogram import Router, types, F
from tg_bot.config import bot, group_id, teachers
from .request_to_api import send_file

import base64


image_router = Router()


@image_router.message(F.chat.id == group_id)
async def pic(message: types.Message):
    if message.photo:
        try:
            photo = message.photo[-1].file_id
            file = await bot.get_file(photo)
            await bot.download_file(file.file_path, "handlers/student.png")

            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ Base64
            with open("handlers/student.png", "rb") as photo_file:
                photo_base64 = base64.b64encode(photo_file.read()).decode("utf-8")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            response = send_file(photo_base64)

            # –î–æ—Å—Ç–∞–µ–º –∫–æ–¥ –∏ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
            status_code = response.get("status_code", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–¥")
            response_json = response.get("response_json", {})

            # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
            print(f"üì© –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {status_code}, {response_json}")

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            error_message = response_json.get("error", response_json.get("message", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"))
            raw_response = response_json if isinstance(response_json, dict) else str(response_json)

            await message.reply(
                text=f"üì© –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {status_code}\n"
                     f"üìù –î–µ—Ç–∞–ª–∏: {raw_response}",
                parse_mode='HTML'
            )

        except Exception as e:
            await message.reply(
                text=f"‚ö† –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}",
                parse_mode='HTML'
            )